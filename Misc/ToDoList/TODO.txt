Currently Working:

Graphics:
Visualiser is working but the waveform needs to move to centre of the screen. 

Things to check: 
1. Can i centre the dry waveform reliabely? //
1a - refactor clean code
2a, what happens if i try and pull from the delay array when it isn't full

2. Can i show the wet waveform? 
-- Its this, once it's deleted and put somewhere else, it crashes
-- Crashes when put on a midi track
Test 1. Works on an audio track //
Test 1a. When on one audio track, the visualiser works
Test 2. Works on two audio tracks - it does not work on two audio tracks 
Notes:
Audio plugin crashes ableton when making two instances of the plugin while trying to log 'wet' data. 
Audio plugin crashes when i try and use it on a midi instance
Audio plugin crashes when i use it on an ableton 


3. Can i show two instances of the visualiser window object? (same waveforms)
4. Can i show two instances of the visualiser window object? (different waveforms)

Crashes: 
The effect crashes if I put it on when there is already audio playing
It could be a good idea to separate this project into two with 

//==========
17/11/2022: GUI On the backburner
Focus on audio effect part

//0. Refactor and then switch off GUI Code
//1. Introduce Fuzz Effect
//2. Introduce Nonlinear distortion effect
//3. Fix Low pass filter to start at 20Hz not 0 

18/11/2022: GUI On the backburner
Focus on audio effect part

//0. Add a toggle button to the GUI 
//1. Have that toggle button toggle the distortion part of the plugin
//2. Have a toggle button that toggles a full wave rectifier

19/11/2022: Refactoring

//0. Move all distortion effects to a waveshaping class
//1. Move all parameters into a managed structure

20/11/2022: Draw a diagram of the waveshaper 

//0. create a  Voltage transfer function display object
//1. draw a square inside the box
//2. draw a transfer function inside the box
//3. draw a cross using the path object ??

22/11/2022: Display input and output waveforms

Circular Buffer:
//0. give mCircBuffer 2x as many channels
//1. iterate through channels 1-2 and 3-4 separately
//2. pass over all channels 
//3. get information from channels 1-2 and 3-4 separately

Distortion: 
// Find an asymetrical distortion that crosses the x axis smoothly (Done)

23/11/2022:
Bugs and Errors:

Upon Initialising: 
JUCE Assertion failure in juce_IIRFilter.cpp:81
JUCE Assertion failure in juce_IIRFilter.cpp:82
JUCE Assertion failure in juce_AudioProcessor.cpp:441
JUCE Assertion failure in juce_AudioProcessor.cpp:441
JUCE Assertion failure in juce_AudioProcessor.cpp:441
JUCE Assertion failure in juce_AudioProcessor.cpp:441
JUCE Assertion failure in juce_AudioProcessor.cpp:441
JUCE Assertion failure in juce_AudioProcessor.cpp:441
JUCE Assertion failure in juce_AudioProcessor.cpp:441

JUCE Assertion failure in juce_IIRFilter.cpp:81
JUCE Assertion failure in juce_IIRFilter.cpp:82
template <typename NumericType>
std::array<NumericType, 6> ArrayCoefficients<NumericType>::makeLowPass (double sampleRate,
                                                                        NumericType frequency,
                                                                        NumericType Q)
{
81::    jassert (sampleRate > 0.0);
82::    jassert (frequency > 0 && frequency <= static_cast<float> (sampleRate * 0.5));
    jassert (Q > 0.0);

    auto n = 1 / std::tan (MathConstants<NumericType>::pi * frequency / static_cast<NumericType> (sampleRate));
    auto nSquared = n * n;
    auto invQ = 1 / Q;
    auto c1 = 1 / (1 + invQ * n + nSquared);

    return { { c1, c1 * 2, c1,
               1, c1 * 2 * (1 - nSquared),
               c1 * (1 - invQ * n + nSquared) } };
}

JUCE Assertion failure in juce_AudioProcessor.cpp:441 (Fixed)
void AudioProcessor::validateParameter (AudioProcessorParameter* param)
{
    checkForDuplicateParamID (param);
    checkForDuplicateTrimmedParamID (param);

    /*  If you're building this plugin as an AudioUnit, and you intend to use the plugin in
        Logic Pro or GarageBand, it's a good idea to set version hints on all of your parameters
        so that you can add parameters safely in future versions of the plugin.
        See the documentation for AudioProcessorParameter(int) for more information.
    */
   #if JucePlugin_Build_AU
441::    jassert (wrapperType == wrapperType_Undefined || param->getVersionHint() != 0);
   #endif
}

While Runnig:
JUCE Assertion failure in juce_AudioSampleBuffer.h:940
JUCE Assertion failure in juce_AudioSampleBuffer.h:940
JUCE Assertion failure in juce_AudioSampleBuffer.h:940
JUCE Assertion failure in juce_AudioSampleBuffer.h:940
940:: jassert (sourceStartSample >= 0 && numSamples >= 0 && sourceStartSample + numSamples <= source.size);
I think this is from asking for asking for gui stuff before anything is playing

JUCE Assertion failure in juce_AudioSampleBuffer.h:938
jassert (destStartSample >= 0 && destStartSample + numSamples <= size);
Problems with copyFrom
